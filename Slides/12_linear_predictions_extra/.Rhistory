geom_line(aes(x = x, y = y),
data = normal_density)
beta_0_est <- ls_hdi$coefficients[1]
beta_0_est
# Chunk 1
library(tidyverse)
library(knitr)
happiness_train <- read_csv("happiness_train.csv")
happiness_test <- read_csv("happiness_test.csv")
happiness_combined <- rbind(happiness_train, happiness_test)
# Chunk 2
annotation <- happiness_train %>%
filter(country %in% c("Finland", "United States", "Spain", "China", "India", "Malawi", "Afghanistan"))
happiness_train %>%
ggplot() +
geom_histogram(aes(x = world_happiness_score), binwidth = 0.2,
color = "white", fill = "grey60") +
geom_point(aes(x = world_happiness_score, y = 0),
data = annotation) +
geom_text(aes(x = world_happiness_score, y = 0.2, label = country),
data = annotation, angle = 45, hjust = 0, col = "grey10") +
geom_vline(xintercept = 5.7, color = "orange") +
theme_classic() +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(limits = c(2.5, 8.2)) +
labs(x = "Happiness score", y = "Number of countries")
# Chunk 3
happiness_train %>% ggplot() +
geom_point(aes(x = school_years, y = world_happiness_score), alpha = 0.8,
color = "#1D4E89") +
geom_text(aes(x = school_years, y = world_happiness_score, label = country),
check_overlap = TRUE, hjust = 0, nudge_x = 0.1,
alpha = 0.6) +
labs(x = "Years of schooling", y = "Happiness score",
title = "Happiness and years of schooling") +
#scale_x_continuous(limits = c(10, 100)) +
theme_classic()
# Chunk 4
finland_usa <- happiness_train %>%
# convert everything to a percentile
mutate_if(is.numeric, ~(. - min(.)) / (max(.) - min(.))) %>%
filter(country %in% c("United States", "Finland")) %>%
pivot_longer(cols = 2:32, names_to = "variable", values_to = "percentile")   %>%
mutate(variable = str_to_sentence(str_replace_all(variable, "_", " ")))
finland_usa_segment <-
finland_usa %>%
group_by(variable) %>%
summarise(min_percentile = min(percentile),
max_percentile = max(percentile)) %>%
# arrange variables in order of biggest to smallest difference
mutate(difference = abs(max_percentile - min_percentile)) %>%
arrange(difference) %>%
mutate(variable = fct_inorder(variable))
finland_usa %>%
mutate(variable = fct_relevel(variable, levels(finland_usa_segment$variable))) %>%
ggplot() +
geom_segment(aes(y = variable, x = min_percentile,
xend = max_percentile, yend = variable),
color = "grey40",
data = finland_usa_segment) +
geom_point(aes(y = variable, x = percentile, color = country),
alpha = 0.8) +
labs(x = "Percentile", y = NULL, color = "Country:") +
scale_x_continuous(labels = scales::percent(c(0, 0.25, 0.5, 0.75, 1))) +
theme_classic() +
theme(panel.grid.major.y = element_line(color = "grey90"),
axis.line = element_blank(),
legend.position = "top")
# Chunk 5
# manual computation
X <- happiness_train %>%
transmute(ones = 1, hdi_index, health_expenditure_per_person, school_years, government_spending_score, women_mps_pct) %>%
as.matrix
Y <- happiness_train$world_happiness_score
coefs <- solve(t(X) %*% X) %*% t(X) %*% Y
coefs
# Chunk 6
ls_4var <- lm(world_happiness_score ~ hdi_index + health_expenditure_per_person + school_years + government_spending_score + women_mps_pct,
data = happiness_train)
summary(ls_4var)
# Chunk 7
happiness_train %>%
select_if(is.numeric) %>%
# compute pairwise correlations
cor() %>%
as.data.frame() %>%
rownames_to_column("var1") %>%
pivot_longer(2:(ncol(happiness_train)),
names_to = "var2",
values_to = "cor") %>%
# remove correlations of 1 of each variable with themselves
filter(var1 != var2) %>%
arrange(desc(cor)) %>%
head(10)
# Chunk 8
happiness_train %>%
select(world_happiness_score,
`government_effectiveness`,
`rule_of_law`,
`regulatory_quality`) %>%
cor %>%
as.data.frame %>%
select(world_happiness_score)
# Chunk 9
happiness_train %>%
select(world_happiness_score,
`judicial_effectiveness_score`,
`political_rights_score`) %>%
cor %>%
as.data.frame %>%
select(world_happiness_score)
# Chunk 10
happiness_train_clean <- happiness_train %>%
select(-political_rights_score,
-rule_of_law,
-regulatory_quality)
# Chunk 11
ls_full <- lm(world_happiness_score ~ .,
select(happiness_train_clean, -country))
summary(ls_full)
# Chunk 12
residuals <- data.frame(y = happiness_train_clean$world_happiness_score,
yhat_4var = ls_4var$fitted.values,
yhat_full = ls_full$fitted.values) %>%
mutate(residual_4var = y - yhat_4var,
residual_full = y - yhat_full)
residuals %>%
ggplot() +
geom_point(aes(x = yhat_4var, y = residual_4var)) +
geom_hline(yintercept = 0) +
labs(x = "Fitted value", y = "Residual",
title = "(a) Residual plot for four-feature model")
# Chunk 13
residuals %>%
ggplot() +
geom_point(aes(x = yhat_full, y = residual_full)) +
geom_hline(yintercept = 0) +
labs(x = "Fitted value", y = "Residual",
title = "(c) Residual plot for full model")
# Chunk 14
pred_4 <- predict(ls_4var, filter(happiness_test, country == "Switzerland"))
pred_4
pred_full <- predict(ls_full, filter(happiness_test, country == "Switzerland"))
pred_full
# Chunk 15
ls_hdi <- lm(world_happiness_score ~ hdi_index, happiness_combined)
x <- happiness_combined$hdi_index
n <- length(x)
residuals <- happiness_combined$world_happiness_score - predict(ls_hdi, happiness_combined)
sigma2_hat <- (1/(n - 2)) * sum(residuals^2)
beta_0_var_est <- sigma2_hat * sum(x^2) /(n*sum(x^2) - (sum(x))^2 )
beta_0_var_est
beta_1_var_est <-  n * sigma2_hat /(n*sum(x^2) - (sum(x))^2 )
beta_1_var_est
beta_0_est <- ls_hdi$coefficients[1]
beta_0_est
beta_1_est <- ls_hdi$coefficients[2]
beta_1_est
boot_coefs <- map_df(1:1000, function(i) {
happiness_boot <- happiness_combined %>%
sample_frac(1, replace = TRUE) %>%
select(-country)
ls_boot <- lm(world_happiness_score ~ hdi_index, happiness_boot)
data.frame(coef = c("b0", "b1"),
value = ls_boot$coefficients)
}, .id = "boot")
beta_1_estimate_df <-
data.frame(x = seq(4, 7, by = 0.1)) %>%
mutate(y = dnorm(x, beta_1_est, sqrt(beta_1_var_est)),
coef = "b1")
beta_0_estimate_df <-
data.frame(x = seq(0, 2.5, by = 0.1)) %>%
mutate(y = dnorm(x, beta_0_est, sqrt(beta_0_var_est)),
coef = "b0")
beta_estimate_df <- rbind(beta_1_estimate_df,
beta_0_estimate_df)
boot_coefs %>%
ggplot() +
geom_histogram(aes(x = value, y = ..density..)) +
geom_line(aes(x = x, y = y), beta_1_estimate_df) +
facet_wrap(~coef, scales = "free_x")
happiness_boot <- happiness_combined %>%
sample_frac(1, replace = TRUE) %>%
select(-country)
lad_boot_coefs <- map_df(1:1000, function(i) {
happiness_boot <- happiness_combined %>%
sample_frac(1, replace = TRUE) %>%
select(-country)
lad_boot <- lad(world_happiness_score ~ hdi_index, happiness_boot)
data.frame(coef = c("b0", "b1"),
value = lad_boot$coefficients)
}, .id = "boot")
lad_boot_coefs %>%
ggplot() +
geom_histogram(aes(x = value, y = ..density..)) +
geom_line(aes(x = x, y = y), beta_1_estimate_df) +
facet_wrap(~coef, scales = "free_x")
beta_0_est
ls_full <- lm(world_happiness_score ~ .,
select(happiness_train_clean, -country))
summary(ls_full)
residuals <- data.frame(y = happiness_train_clean$world_happiness_score,
yhat_4var = ls_4var$fitted.values,
yhat_full = ls_full$fitted.values) %>%
mutate(residual_4var = y - yhat_4var,
residual_full = y - yhat_full)
residuals %>%
ggplot() +
geom_point(aes(x = yhat_4var, y = residual_4var)) +
geom_hline(yintercept = 0) +
labs(x = "Fitted value", y = "Residual",
title = "(a) Residual plot for four-feature model")
pred_4 <- predict(ls_5var, filter(happiness_test, country == "Switzerland"))
# Chunk 1
library(tidyverse)
library(knitr)
happiness_train <- read_csv("happiness_train.csv")
happiness_test <- read_csv("happiness_test.csv")
happiness_combined <- rbind(happiness_train, happiness_test)
# Chunk 2
annotation <- happiness_train %>%
filter(country %in% c("Finland", "United States", "Spain", "China", "India", "Malawi", "Afghanistan"))
happiness_train %>%
ggplot() +
geom_histogram(aes(x = world_happiness_score), binwidth = 0.2,
color = "white", fill = "grey60") +
geom_point(aes(x = world_happiness_score, y = 0),
data = annotation) +
geom_text(aes(x = world_happiness_score, y = 0.2, label = country),
data = annotation, angle = 45, hjust = 0, col = "grey10") +
geom_vline(xintercept = 5.7, color = "orange") +
theme_classic() +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(limits = c(2.5, 8.2)) +
labs(x = "Happiness score", y = "Number of countries")
# Chunk 3
happiness_train %>% ggplot() +
geom_point(aes(x = school_years, y = world_happiness_score), alpha = 0.8,
color = "#1D4E89") +
geom_text(aes(x = school_years, y = world_happiness_score, label = country),
check_overlap = TRUE, hjust = 0, nudge_x = 0.1,
alpha = 0.6) +
labs(x = "Years of schooling", y = "Happiness score",
title = "Happiness and years of schooling") +
#scale_x_continuous(limits = c(10, 100)) +
theme_classic()
# Chunk 4
finland_usa <- happiness_train %>%
# convert everything to a percentile
mutate_if(is.numeric, ~(. - min(.)) / (max(.) - min(.))) %>%
filter(country %in% c("United States", "Finland")) %>%
pivot_longer(cols = 2:32, names_to = "variable", values_to = "percentile")   %>%
mutate(variable = str_to_sentence(str_replace_all(variable, "_", " ")))
finland_usa_segment <-
finland_usa %>%
group_by(variable) %>%
summarise(min_percentile = min(percentile),
max_percentile = max(percentile)) %>%
# arrange variables in order of biggest to smallest difference
mutate(difference = abs(max_percentile - min_percentile)) %>%
arrange(difference) %>%
mutate(variable = fct_inorder(variable))
finland_usa %>%
mutate(variable = fct_relevel(variable, levels(finland_usa_segment$variable))) %>%
ggplot() +
geom_segment(aes(y = variable, x = min_percentile,
xend = max_percentile, yend = variable),
color = "grey40",
data = finland_usa_segment) +
geom_point(aes(y = variable, x = percentile, color = country),
alpha = 0.8) +
labs(x = "Percentile", y = NULL, color = "Country:") +
scale_x_continuous(labels = scales::percent(c(0, 0.25, 0.5, 0.75, 1))) +
theme_classic() +
theme(panel.grid.major.y = element_line(color = "grey90"),
axis.line = element_blank(),
legend.position = "top")
# Chunk 5
# manual computation
X <- happiness_train %>%
transmute(ones = 1, hdi_index, health_expenditure_per_person, school_years, government_spending_score, women_mps_pct) %>%
as.matrix
Y <- happiness_train$world_happiness_score
coefs <- solve(t(X) %*% X) %*% t(X) %*% Y
coefs
# Chunk 6
ls_5var <- lm(world_happiness_score ~ hdi_index + health_expenditure_per_person + school_years + government_spending_score + women_mps_pct,
data = happiness_train)
summary(ls_5var)
# Chunk 7
happiness_train %>%
select_if(is.numeric) %>%
# compute pairwise correlations
cor() %>%
as.data.frame() %>%
rownames_to_column("var1") %>%
pivot_longer(2:(ncol(happiness_train)),
names_to = "var2",
values_to = "cor") %>%
# remove correlations of 1 of each variable with themselves
filter(var1 != var2) %>%
arrange(desc(cor)) %>%
head(10)
# Chunk 8
happiness_train %>%
select(world_happiness_score,
`government_effectiveness`,
`rule_of_law`,
`regulatory_quality`) %>%
cor %>%
as.data.frame %>%
select(world_happiness_score)
# Chunk 9
happiness_train %>%
select(world_happiness_score,
`judicial_effectiveness_score`,
`political_rights_score`) %>%
cor %>%
as.data.frame %>%
select(world_happiness_score)
# Chunk 10
happiness_train_clean <- happiness_train %>%
select(-political_rights_score,
-rule_of_law,
-regulatory_quality)
# Chunk 11
ls_full <- lm(world_happiness_score ~ .,
select(happiness_train_clean, -country))
summary(ls_full)
# Chunk 12
residuals <- data.frame(y = happiness_train_clean$world_happiness_score,
yhat_5var = ls_5var$fitted.values,
yhat_full = ls_full$fitted.values) %>%
mutate(residual_5var = y - yhat_5var,
residual_full = y - yhat_full)
residuals %>%
ggplot() +
geom_point(aes(x = yhat_5var, y = residual_5var)) +
geom_hline(yintercept = 0) +
labs(x = "Fitted value", y = "Residual",
title = "(a) Residual plot for five-feature model")
# Chunk 13
residuals %>%
ggplot() +
geom_point(aes(x = yhat_full, y = residual_full)) +
geom_hline(yintercept = 0) +
labs(x = "Fitted value", y = "Residual",
title = "(c) Residual plot for full model")
pred_5 <- predict(ls_5var, filter(happiness_test, country == "Switzerland"))
pred_5
pred_full <- predict(ls_full, filter(happiness_test, country == "Switzerland"))
pred_full
test_results <- data.frame(pred_5 = predict(ls_5var, happiness_test),
pred_full = predict(ls_full, happiness_test),
true = happiness_test$world_happiness_score)
yardstick::rmse_vec(test_results$pred_5, test_results$true)
# test set rMSE for 5 feature model
yardstick::rmse_vec(test_results$pred_5, test_results$true)
yardstick::rmse_vec(test_results$pred_full, test_results$true)
# test set rMSE for 5 feature model
yardstick::rsq_vec(test_results$pred_5, test_results$true)
yardstick::rsq_vec(test_results$pred_full, test_results$true)
test_results %>%
ggplot() +
geom_point(aes(x = true, y = pred_5))
test_results %>%
ggplot() +
geom_point(aes(x = true, y = pred_full)) +
geom_abline(intercept = 0, slope  = 1)
test_results %>%
ggplot() +
geom_point(aes(x = true, y = pred_5)) +
geom_abline(intercept = 0, slope  = 1)
test_results %>%
ggplot() +
geom_point(aes(x = true, y = pred_full)) +
geom_abline(intercept = 0, slope  = 1)
set.seed(2764)
library(L1pack)
lad_boot_coefs <- map_df(1:1000, function(i) {
happiness_boot <- happiness_combined %>%
sample_frac(1, replace = TRUE) %>%
select(-country)
lad_boot <- lad(world_happiness_score ~ hdi_index, happiness_boot)
data.frame(coef = c("b0", "b1"),
value = lad_boot$coefficients)
}, .id = "boot")
set.seed(764)
library(L1pack)
lad_boot_coefs <- map_df(1:1000, function(i) {
happiness_boot <- happiness_combined %>%
sample_frac(1, replace = TRUE) %>%
select(-country)
lad_boot <- lad(world_happiness_score ~ hdi_index, happiness_boot)
data.frame(coef = c("b0", "b1"),
value = lad_boot$coefficients)
}, .id = "boot")
summary(ls_full)
ls_new <- lm(world_happiness_score ~ area + happy_planet_index + hdi_index + log(education_expenditure_pct_gdp) + unemployment_pct + political_stability + government_integrity_score + overall_economic_freedom_score)
ls_new <- lm(world_happiness_score ~ area + happy_planet_index + hdi_index + log(education_expenditure_pct_gdp) + unemployment_pct + political_stability + government_integrity_score + overall_economic_freedom_score, happiness_train_clean)
predict(ls_new, happiness_test)
yardstick::rsq_vec(predict(ls_new, happiness_test), happiness_test$world_happiness_score)
yardstick::rsq_vec(predict(ls_full, happiness_test), happiness_test$world_happiness_score)
ls_new <- lm(world_happiness_score ~ area + happy_planet_index + hdi_index + log(education_expenditure_pct_gdp) + log(unemployment_pct) + political_stability + government_integrity_score + overall_economic_freedom_score, happiness_train_clean)
yardstick::rsq_vec(predict(ls_new, happiness_test), happiness_test$world_happiness_score)
ls_new <- lm(world_happiness_score ~ area + happy_planet_index + hdi_index + education_expenditure_pct_gdp + unemployment_pct + political_stability + government_integrity_score + overall_economic_freedom_score, happiness_train_clean)
yardstick::rsq_vec(predict(ls_new, happiness_test), happiness_test$world_happiness_score)
yardstick::rsq_vec(predict(ls_full, happiness_test), happiness_test$world_happiness_score)
ls_new <- lm(world_happiness_score ~ area + happy_planet_index + hdi_index + log(education_expenditure_pct_gdp) + unemployment_pct + political_stability + government_integrity_score + overall_economic_freedom_score, happiness_train_clean)
yardstick::rsq_vec(predict(ls_new, happiness_test), happiness_test$world_happiness_score)
ls_new <- lm(world_happiness_score ~ log(area) + happy_planet_index + hdi_index + log(education_expenditure_pct_gdp) + unemployment_pct + political_stability + government_integrity_score + overall_economic_freedom_score, happiness_train_clean)
yardstick::rsq_vec(predict(ls_new, happiness_test), happiness_test$world_happiness_score)
ls_new <- lm(world_happiness_score ~ log(area) + happy_planet_index + log(hdi_index) + log(education_expenditure_pct_gdp) + unemployment_pct + political_stability + government_integrity_score + overall_economic_freedom_score, happiness_train_clean)
yardstick::rsq_vec(predict(ls_new, happiness_test), happiness_test$world_happiness_score)
ls_new <- lm(log(world_happiness_score) ~ area + happy_planet_index + hdi_index + education_expenditure_pct_gdp + unemployment_pct + political_stability + government_integrity_score + overall_economic_freedom_score, happiness_train_clean)
yardstick::rsq_vec(exp(predict(ls_new, happiness_test)), happiness_test$world_happiness_score)
yardstick::rsq_vec(predict(ls_full, happiness_test), happiness_test$world_happiness_score)
# evaluation of new model on test set
yardstick::rmse_vec(exp(predict(ls_new, happiness_test)), happiness_test$world_happiness_score)
# evaluation of full model on test set
yardstick::rmse_vec(predict(ls_full, happiness_test), happiness_test$world_happiness_score)
ls_new <- lm(log(world_happiness_score) ~ area + happy_planet_index + hdi_index + education_expenditure_pct_gdp + unemployment_pct + political_stability + government_integrity_score + overall_economic_freedom_score, happiness_train_clean)
# evaluation of new model on test set
yardstick::rsq_vec(exp(predict(ls_new, happiness_test)), happiness_test$world_happiness_score)
# evaluation of full model on test set
yardstick::rsq_vec(predict(ls_full, happiness_test), happiness_test$world_happiness_score)
# evaluation of new model on test set
yardstick::rmse_vec(exp(predict(ls_new, happiness_test)), happiness_test$world_happiness_score)
# evaluation of full model on test set
yardstick::rmse_vec(predict(ls_full, happiness_test), happiness_test$world_happiness_score)
dim(happiness_train)
ls_hdi <- lm(world_happiness_score ~ hdi_index, happiness_combined)
# look at coefficent values
ls_hdi$coefficients
beta_0_var_est
beta_1_var_est
boot_coefs <- map_df(1:1000, function(i) {
happiness_boot <- happiness_combined %>%
sample_frac(1, replace = TRUE) %>%
select(-country)
ls_boot <- lm(world_happiness_score ~ hdi_index, happiness_boot)
data.frame(coef = c("b0", "b1"),
value = ls_boot$coefficients)
}, .id = "boot")
beta_1_estimate_df <-
data.frame(x = seq(4, 7, by = 0.1)) %>%
mutate(y = dnorm(x, beta_1_est, sqrt(beta_1_var_est)),
coef = "b1")
beta_0_estimate_df <-
data.frame(x = seq(0, 2.5, by = 0.1)) %>%
mutate(y = dnorm(x, beta_0_est, sqrt(beta_0_var_est)),
coef = "b0")
beta_estimate_df <- rbind(beta_1_estimate_df,
beta_0_estimate_df)
boot_coefs %>%
ggplot() +
geom_histogram(aes(x = value, y = ..density..)) +
geom_line(aes(x = x, y = y), beta_1_estimate_df) +
facet_wrap(~coef, scales = "free_x")
boot_coefs
beta_1_estimate_df
beta_1_estimate_df <-
data.frame(x = seq(4, 7, by = 0.1)) %>%
mutate(y = dnorm(x, beta_1_est, sqrt(beta_1_var_est)))
beta_1_estimate_df
boot_coefs
boot_coefs <- map_df(1:1000, function(i) {
happiness_boot <- happiness_combined %>%
sample_frac(1, replace = TRUE) %>%
select(-country)
ls_boot <- lm(world_happiness_score ~ hdi_index, happiness_boot)
data.frame(coef = c("b0", "b1"),
value = ls_boot$coefficients)
}, .id = "boot")
boot_coefs
boot_coefs %>% head
boot_coefs %>%
filter(coef == "b0") %>%
ggplot() +
geom_histogram(aes(x = x, y = ..density..)) +
geom_line(aes(x = x, y = y), beta_1_estimate_df)
boot_coefs %>%
filter(coef == "b0") %>%
ggplot() +
geom_histogram(aes(x = value, y = ..density..)) +
geom_line(aes(x = x, y = y), beta_1_estimate_df)
boot_coefs %>%
filter(coef == "b0") %>%
ggplot() +
geom_histogram(aes(x = value, y = ..density..)) +
geom_line(aes(x = x, y = y), beta_0_estimate_df)
boot_coefs %>%
filter(coef == "b1") %>%
ggplot() +
geom_histogram(aes(x = value, y = ..density..)) +
geom_line(aes(x = x, y = y), beta_1_estimate_df)  +
labs(x = "b1", title = "b1")
lad_boot_coefs %>%
filter(coef == "b0") %>%
ggplot() +
geom_histogram(aes(x = value, y = ..density..)) +
geom_line(aes(x = x, y = y), beta_0_estimate_df)  +
labs(x = "beta0", title = "LAD beta0")
lad_boot_coefs %>%
filter(coef == "b1") %>%
ggplot() +
geom_histogram(aes(x = value, y = ..density..)) +
geom_line(aes(x = x, y = y), beta_1_estimate_df)  +
labs(x = "beta1", title = "LAD beta1")
# look at coefficent values
beta_0_est <- ls_hdi$coefficients[1]
beta_2_est <- ls_hdi$coefficients[2]
